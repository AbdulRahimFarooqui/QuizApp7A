{"ast":null,"code":"var _jsxFileName = \"/home/abdurraheemfarooqui/Desktop/Desktop files left at the beginning of A2/Bootcamp/Projects/quizapp/src/Compnents/QuestionDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionCard = ({\n  question,\n  options,\n  callback,\n  questionNo,\n  totalQuestions\n}) => {\n  _s();\n\n  let [selectedAnswer, setSelectedAns] = useState(\"\");\n\n  const handleSelection = ev => {\n    setSelectedAns(ev.target.value);\n  };\n\n  const html_string = question;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-number\",\n      children: [/*#__PURE__*/_jsxDEV(\"u\", {\n        children: [\"QUESTION \", questionNo + 1, \" OF \", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-display\",\n        dangerouslySetInnerHTML: {\n          __html: html_string\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"question-form\",\n      onSubmit: e => callback(e, selectedAnswer),\n      children: [options.map((opt, ind) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"opt\",\n              value: opt,\n              onChange: handleSelection,\n              required: true,\n              checked: selectedAnswer === opt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 37\n            }, this), opt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this)\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: questionNo === totalQuestions - 1 ? \"Finish\" : \"Next\",\n        type: \"submit\",\n        className: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionCard, \"wQUy0GsQWHQKVDl9R8mrDOOTZMA=\");\n\n_c = QuestionCard;\nexport default QuestionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["/home/abdurraheemfarooqui/Desktop/Desktop files left at the beginning of A2/Bootcamp/Projects/quizapp/src/Compnents/QuestionDisplay.tsx"],"names":["React","useState","QuestionCard","question","options","callback","questionNo","totalQuestions","selectedAnswer","setSelectedAns","handleSelection","ev","target","value","html_string","__html","e","map","opt","ind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,YAAmC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA,UAA/B;AAA2CC,EAAAA;AAA3C,CAAD,KAAiE;AAAA;;AACzG,MAAI,CAACC,cAAD,EAAiBC,cAAjB,IAAmCR,QAAQ,CAAC,EAAD,CAA/C;;AACA,QAAMS,eAAe,GAAIC,EAAD,IAAa;AACjCF,IAAAA,cAAc,CAACE,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAd;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAGX,QAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAA,gCAAaG,UAAU,GAAG,CAA1B,UAAiCC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAgC,QAAA,uBAAuB,EAAE;AAAEQ,UAAAA,MAAM,EAAED;AAAV;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,QAAQ,EAAGE,CAAD,IAAqCX,QAAQ,CAACW,CAAD,EAAIR,cAAJ,CAAvF;AAAA,iBAEQJ,OAAO,CAACa,GAAR,CAAY,CAACC,GAAD,EAAcC,GAAd,KAA8B;AACtC,4BACI;AAAA,iCACI;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA,oCACI;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,IAAI,EAAC,KAFT;AAGI,cAAA,KAAK,EAAED,GAHX;AAII,cAAA,QAAQ,EAAER,eAJd;AAKI,cAAA,QAAQ,MALZ;AAMI,cAAA,OAAO,EAAEF,cAAc,KAAKU;AANhC;AAAA;AAAA;AAAA;AAAA,oBADJ,EASKA,GATL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUC,GAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAeH,OAhBD,CAFR,eAoBI;AAAO,QAAA,KAAK,EAAGb,UAAU,KAAMC,cAAc,GAAG,CAAlC,GAAwC,QAAxC,GAAmD,MAAjE;AAAyE,QAAA,IAAI,EAAC,QAA9E;AAAuF,QAAA,SAAS,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAvCD;;GAAML,Y;;KAAAA,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport { PropsTypeQD } from './../Types/quiz_types'\n\nconst QuestionCard: React.FC<PropsTypeQD> = ({ question, options, callback, questionNo, totalQuestions }) => {\n    let [selectedAnswer, setSelectedAns] = useState(\"\");\n    const handleSelection = (ev: any) => {\n        setSelectedAns(ev.target.value);\n    }\n    const html_string = question;\n\n    return (\n        <div className=\"question-container\">\n            <div className=\"question-number\">\n                <u>QUESTION {questionNo + 1} OF {totalQuestions}</u>.\n            </div>\n            <div className=\"question\" >\n                <p className=\"question-display\" dangerouslySetInnerHTML={{ __html: html_string }}></p>\n            </div>\n            <form className=\"question-form\" onSubmit={(e: React.FormEvent<EventTarget>) => callback(e, selectedAnswer)}>\n                {\n                    options.map((opt: string, ind: number) => {\n                        return (\n                            <div key={ind}>\n                                <label className=\"radio\">\n                                    <input\n                                        type=\"radio\"\n                                        name=\"opt\"\n                                        value={opt}\n                                        onChange={handleSelection}\n                                        required\n                                        checked={selectedAnswer === opt}\n                                    />\n                                    {opt}\n                                </label>\n                            </div>\n                        )\n                    })\n                }\n                <input value={(questionNo === (totalQuestions - 1)) ? \"Finish\" : \"Next\"} type=\"submit\" className=\"submit\" />\n            </form>\n        </div>\n    )\n}\nexport default QuestionCard;"]},"metadata":{},"sourceType":"module"}