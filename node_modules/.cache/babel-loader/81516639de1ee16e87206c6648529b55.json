{"ast":null,"code":"import _slicedToArray from\"/home/abdurraheemfarooqui/Desktop/Desktop files left at the beginning of A2/Bootcamp/Projects/quizapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var QuestionCard=function QuestionCard(_ref){var question=_ref.question,options=_ref.options,callback=_ref.callback,questionNo=_ref.questionNo,totalQuestions=_ref.totalQuestions;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),selectedAnswer=_useState2[0],setSelectedAns=_useState2[1];var handleSelection=function handleSelection(ev){setSelectedAns(ev.target.value);};var html_string=question;return/*#__PURE__*/_jsxs(\"div\",{className:\"question-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-number\",children:[/*#__PURE__*/_jsxs(\"u\",{children:[\"QUESTION \",questionNo+1,\" OF \",totalQuestions]}),\".\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"question\",children:/*#__PURE__*/_jsx(\"p\",{className:\"question-display\",dangerouslySetInnerHTML:{__html:html_string}})}),/*#__PURE__*/_jsxs(\"form\",{className:\"question-form\",onSubmit:function onSubmit(e){return callback(e,selectedAnswer);},children:[options.map(function(opt,ind){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"opt\",value:opt,onChange:handleSelection,required:true,checked:selectedAnswer===opt}),opt]})},ind);}),/*#__PURE__*/_jsx(\"input\",{value:questionNo===totalQuestions-1?\"Finish\":\"Next\",type:\"submit\",className:\"submit\"})]})]});};export default QuestionCard;","map":{"version":3,"sources":["/home/abdurraheemfarooqui/Desktop/Desktop files left at the beginning of A2/Bootcamp/Projects/quizapp/src/Compnents/QuestionDisplay.tsx"],"names":["React","useState","QuestionCard","question","options","callback","questionNo","totalQuestions","selectedAnswer","setSelectedAns","handleSelection","ev","target","value","html_string","__html","e","map","opt","ind"],"mappings":"4NAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,wFAGA,GAAMC,CAAAA,YAAmC,CAAG,QAAtCA,CAAAA,YAAsC,MAAiE,IAA9DC,CAAAA,QAA8D,MAA9DA,QAA8D,CAApDC,OAAoD,MAApDA,OAAoD,CAA3CC,QAA2C,MAA3CA,QAA2C,CAAjCC,UAAiC,MAAjCA,UAAiC,CAArBC,cAAqB,MAArBA,cAAqB,eAClEN,QAAQ,CAAC,EAAD,CAD0D,wCACpGO,cADoG,eACpFC,cADoF,eAEzG,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,EAAD,CAAa,CACjCF,cAAc,CAACE,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAd,CACH,CAFD,CAGA,GAAMC,CAAAA,WAAW,CAAGX,QAApB,CAEA,mBACI,aAAK,SAAS,CAAC,oBAAf,wBACI,aAAK,SAAS,CAAC,iBAAf,wBACI,iCAAaG,UAAU,CAAG,CAA1B,QAAiCC,cAAjC,GADJ,OADJ,cAII,YAAK,SAAS,CAAC,UAAf,uBACI,UAAG,SAAS,CAAC,kBAAb,CAAgC,uBAAuB,CAAE,CAAEQ,MAAM,CAAED,WAAV,CAAzD,EADJ,EAJJ,cAOI,cAAM,SAAS,CAAC,eAAhB,CAAgC,QAAQ,CAAE,kBAACE,CAAD,QAAqCX,CAAAA,QAAQ,CAACW,CAAD,CAAIR,cAAJ,CAA7C,EAA1C,WAEQJ,OAAO,CAACa,GAAR,CAAY,SAACC,GAAD,CAAcC,GAAd,CAA8B,CACtC,mBACI,kCACI,eAAO,SAAS,CAAC,OAAjB,wBACI,cACI,IAAI,CAAC,OADT,CAEI,IAAI,CAAC,KAFT,CAGI,KAAK,CAAED,GAHX,CAII,QAAQ,CAAER,eAJd,CAKI,QAAQ,KALZ,CAMI,OAAO,CAAEF,cAAc,GAAKU,GANhC,EADJ,CASKA,GATL,GADJ,EAAUC,GAAV,CADJ,CAeH,CAhBD,CAFR,cAoBI,cAAO,KAAK,CAAGb,UAAU,GAAMC,cAAc,CAAG,CAAlC,CAAwC,QAAxC,CAAmD,MAAjE,CAAyE,IAAI,CAAC,QAA9E,CAAuF,SAAS,CAAC,QAAjG,EApBJ,GAPJ,GADJ,CAgCH,CAvCD,CAwCA,cAAeL,CAAAA,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport { PropsTypeQD } from './../Types/quiz_types'\n\nconst QuestionCard: React.FC<PropsTypeQD> = ({ question, options, callback, questionNo, totalQuestions }) => {\n    let [selectedAnswer, setSelectedAns] = useState(\"\");\n    const handleSelection = (ev: any) => {\n        setSelectedAns(ev.target.value);\n    }\n    const html_string = question;\n\n    return (\n        <div className=\"question-container\">\n            <div className=\"question-number\">\n                <u>QUESTION {questionNo + 1} OF {totalQuestions}</u>.\n            </div>\n            <div className=\"question\" >\n                <p className=\"question-display\" dangerouslySetInnerHTML={{ __html: html_string }}></p>\n            </div>\n            <form className=\"question-form\" onSubmit={(e: React.FormEvent<EventTarget>) => callback(e, selectedAnswer)}>\n                {\n                    options.map((opt: string, ind: number) => {\n                        return (\n                            <div key={ind}>\n                                <label className=\"radio\">\n                                    <input\n                                        type=\"radio\"\n                                        name=\"opt\"\n                                        value={opt}\n                                        onChange={handleSelection}\n                                        required\n                                        checked={selectedAnswer === opt}\n                                    />\n                                    {opt}\n                                </label>\n                            </div>\n                        )\n                    })\n                }\n                <input value={(questionNo === (totalQuestions - 1)) ? \"Finish\" : \"Next\"} type=\"submit\" className=\"submit\" />\n            </form>\n        </div>\n    )\n}\nexport default QuestionCard;"]},"metadata":{},"sourceType":"module"}