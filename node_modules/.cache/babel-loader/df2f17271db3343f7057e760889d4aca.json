{"ast":null,"code":"var _jsxFileName = \"/home/abdurraheemfarooqui/Desktop/Desktop files left at the beginning of A2/Bootcamp/Projects/quizapp/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getQuestions } from './services/service_questions';\nimport QuestionCard from './Compnents/QuestionDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [quiz, setquiz] = useState([]);\n  let [showResult, setShowResult] = useState(false);\n  let [currentStep, setCurrentStep] = useState(0);\n  let [score, setScore] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      const questions = await getQuestions(5, \"easy\");\n      console.log(questions);\n      setquiz(questions);\n    }\n\n    fetchData();\n  }, []);\n\n  const handleSubmit = (e, userAns) => {\n    if (userAns === quiz[currentStep].answer) {\n      setScore(++score);\n    }\n\n    e.preventDefault();\n\n    if (currentStep !== quiz.length - 1) {\n      setCurrentStep(++currentStep);\n    } else {\n      setShowResult(true);\n    }\n  };\n\n  if (!quiz.length) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-text\",\n        children: [\"Your Final Result is\", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\" \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \" out of \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: quiz.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"PLEASE REFRESH THIS PAGE TO PLAY AGAIN!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Intro-Text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Welcome\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Welcome to The Trivia-5-Questions Quiz App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Here We Will Test Your General-Knowledge By Asking Five Questions In A Row.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"For Each Answer Please Select A \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Correct Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 43\n        }, this), \" From The Given Options!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCard, {\n      options: quiz[currentStep].options,\n      question: quiz[currentStep].question,\n      callback: handleSubmit,\n      questionNo: currentStep,\n      totalQuestions: quiz.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xYSyXUJiHJHMdbFEqaJMvtsVT0Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/abdurraheemfarooqui/Desktop/Desktop files left at the beginning of A2/Bootcamp/Projects/quizapp/src/App.tsx"],"names":["React","useEffect","useState","getQuestions","QuestionCard","App","quiz","setquiz","showResult","setShowResult","currentStep","setCurrentStep","score","setScore","fetchData","questions","console","log","handleSubmit","e","userAns","answer","preventDefault","length","options","question"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,SAASC,YAAT,QAA6B,8BAA7B;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAmB,EAAnB,CAA9B;AACA,MAAI,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA1C;AACA,MAAI,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA5C;AACA,MAAI,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,SAAf,GAA2B;AACzB,YAAMC,SAA2B,GAAG,MAAMZ,YAAY,CAAC,CAAD,EAAI,MAAJ,CAAtD;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAR,MAAAA,OAAO,CAACQ,SAAD,CAAP;AACD;;AACDD,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMI,YAAY,GAAG,CAACC,CAAD,EAAkCC,OAAlC,KAAsD;AACzE,QAAIA,OAAO,KAAKd,IAAI,CAACI,WAAD,CAAJ,CAAkBW,MAAlC,EAA0C;AACxCR,MAAAA,QAAQ,CAAC,EAAED,KAAH,CAAR;AACD;;AACDO,IAAAA,CAAC,CAACG,cAAF;;AACA,QAAIZ,WAAW,KAAKJ,IAAI,CAACiB,MAAL,GAAc,CAAlC,EAAqC;AACnCZ,MAAAA,cAAc,CAAC,EAAED,WAAH,CAAd;AACD,KAFD,MAGK;AACHD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GAXD;;AAaA,MAAI,CAACH,IAAI,CAACiB,MAAV,EAAkB;AAChB,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACD;;AACD,MAAIf,UAAJ,EAAgB;AACd,wBACE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,wDAEE;AAAA,0BAAKI,KAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,2BAEyB;AAAA,oBAAIN,IAAI,CAACiB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFzB,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AACD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA,+BACE;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWE;AAAA,oEACkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE,QAAC,YAAD;AACE,MAAA,OAAO,EAAEjB,IAAI,CAACI,WAAD,CAAJ,CAAkBc,OAD7B;AAEE,MAAA,QAAQ,EAAElB,IAAI,CAACI,WAAD,CAAJ,CAAkBe,QAF9B;AAGE,MAAA,QAAQ,EAAEP,YAHZ;AAIE,MAAA,UAAU,EAAER,WAJd;AAKE,MAAA,cAAc,EAAEJ,IAAI,CAACiB;AALvB;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAxEQlB,G;;KAAAA,G;AA0ET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport { getQuestions } from './services/service_questions'\nimport { UsefulQuestion } from './Types/quiz_types'\nimport QuestionCard from './Compnents/QuestionDisplay';\n\nfunction App() {\n\n  let [quiz, setquiz] = useState<UsefulQuestion[]>([])\n  let [showResult, setShowResult] = useState(false)\n  let [currentStep, setCurrentStep] = useState(0)\n  let [score, setScore] = useState(0)\n\n  useEffect(() => {\n    async function fetchData() {\n      const questions: UsefulQuestion[] = await getQuestions(5, \"easy\")\n      console.log(questions);\n      setquiz(questions);\n    }\n    fetchData();\n  }, [])\n\n  const handleSubmit = (e: React.FormEvent<EventTarget>, userAns: string) => {\n    if (userAns === quiz[currentStep].answer) {\n      setScore(++score)\n    }\n    e.preventDefault();\n    if (currentStep !== quiz.length - 1) {\n      setCurrentStep(++currentStep);\n    }\n    else {\n      setShowResult(true);\n    }\n  }\n\n  if (!quiz.length) {\n    return (<h3>Loading...</h3>)\n  }\n  if (showResult) {\n    return (\n      <div className=\"question-container result-container\">\n        <h2>Result</h2>\n        <p className=\"result-text\">\n          Your Final Result is\n          <b> {score}</b> out of <b>{quiz.length}</b>\n          <p>PLEASE REFRESH THIS PAGE TO PLAY AGAIN!</p>\n        </p>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div className=\"Intro-Text\">\n        <p className=\"Welcome\">\n          <b>\n            <u>\n              Welcome to The Trivia-5-Questions Quiz App\n            </u>\n          </b>\n        </p>\n        <p>\n          Here We Will Test Your General-Knowledge By Asking Five Questions In A Row.\n        </p>\n        <p>\n          For Each Answer Please Select A <b>Correct Answer</b> From The Given Options!\n        </p>\n      </div>\n\n\n      <QuestionCard\n        options={quiz[currentStep].options}\n        question={quiz[currentStep].question}\n        callback={handleSubmit}\n        questionNo={currentStep}\n        totalQuestions={quiz.length}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}